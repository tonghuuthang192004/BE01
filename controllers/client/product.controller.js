const productModel = require('../../modal/client/product.model');

// üü¢ L·∫•y t·∫•t c·∫£ s·∫£n ph·∫©m
const getAllProducts = async (req, res) => {
    try {
        const data = await productModel.getAllProducts();


        res.json({
            success: true,
            message: 'L·∫•y danh s√°ch s·∫£n ph·∫©m th√†nh c√¥ng',
            data
        });
    } catch (error) {
        console.error('‚ùå L·ªói khi l·∫•y t·∫•t c·∫£ s·∫£n ph·∫©m:', error);
        res.status(500).json({ success: false, message: 'Internal server error' });
    }
};


// üî• L·∫•y s·∫£n ph·∫©m HOT
const getHotProducts = async (req, res) => {
    try {
        const data = await productModel.getHotProducts();
        res.json({
            success: true,
            message: 'L·∫•y danh s√°ch s·∫£n ph·∫©m HOT th√†nh c√¥ng',
            data
        });
    } catch (error) {
        console.error('‚ùå L·ªói khi l·∫•y s·∫£n ph·∫©m hot:', error);
        res.status(500).json({ success: false, message: 'Internal server error' });
    }
};

// üì¶ L·∫•y chi ti·∫øt s·∫£n ph·∫©m theo ID
const getProductById = async (req, res) => {
    try {
        const { id } = req.params;
        const data = await productModel.getProductById(id);

        if (!data) {
            return res.status(404).json({ success: false, message: 'Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m' });
        }

        // üö´ Check tr·∫°ng th√°i s·∫£n ph·∫©m
        if (data.trang_thai === 'ƒê√£ h·ªßy') {
            return res.status(200).json({
                success: true,
                message: 'S·∫£n ph·∫©m ƒë√£ h·∫øt h√†ng',
                data,
                canOrder: false // üëà Th√™m flag ƒë·ªÉ frontend bi·∫øt ·∫©n n√∫t ƒë·∫∑t h√†ng
            });
        }

        res.json({
            success: true,
            message: 'L·∫•y chi ti·∫øt s·∫£n ph·∫©m th√†nh c√¥ng',
            data,
            canOrder: true // üëà Cho ph√©p ƒë·∫∑t h√†ng
        });
    } catch (error) {
        console.error('‚ùå L·ªói khi l·∫•y chi ti·∫øt s·∫£n ph·∫©m:', error);
        res.status(500).json({ success: false, message: 'Internal server error' });
    }
};


// üõçÔ∏è L·∫•y s·∫£n ph·∫©m theo danh m·ª•c
const getProductsByCategory = async (req, res) => {
    try {
        const { id } = req.params;
        const data = await productModel.getProductsByCategoryId(id);

        res.json({
            success: true,
            message: 'L·∫•y s·∫£n ph·∫©m theo danh m·ª•c th√†nh c√¥ng',
            data
        });
    } catch (error) {
        console.error('‚ùå L·ªói khi l·∫•y s·∫£n ph·∫©m theo danh m·ª•c:', error);
        res.status(500).json({ success: false, message: 'Internal server error' });
    }
};

// ‚úÖ L·∫•y s·∫£n ph·∫©m li√™n quan
const getRelatedProducts = async (req, res) => {
    try {
        const { categoryId, productId } = req.params;
        const data = await productModel.getRelatedProducts(categoryId, productId);

        res.json({
            success: true,
            message: 'L·∫•y s·∫£n ph·∫©m li√™n quan th√†nh c√¥ng',
            data
        });
    } catch (error) {
        console.error('‚ùå L·ªói l·∫•y s·∫£n ph·∫©m li√™n quan:', error);
        res.status(500).json({
            success: false,
            message: 'Internal server error'
        });
    }
};
// const stock  = async (req, res) => {
//     try {
//         const { id_san_pham } = req.params;
//         const data = await productModel.stock(id_san_pham);

//         res.json({
//             success: true,
//             message: 'L·∫•y s·∫£n ph·∫©m li√™n quan th√†nh c√¥ng',
//             data
//         });
//     } catch (error) {
//         console.error('‚ùå L·ªói l·∫•y s·∫£n ph·∫©m li√™n quan:', error);
//         res.status(500).json({
//             success: false,
//             message: 'Internal server error'
//         });
//     }
// };

const searchProducts = async (req, res) => {
    try {
        const { keyword } = req.query;

        if (!keyword || keyword.trim() === '') {
            return res.status(400).json({
                success: false,
                message: 'Vui l√≤ng nh·∫≠p t·ª´ kh√≥a t√¨m ki·∫øm'
            });
        }

        const data = await productModel.searchProducts(keyword);

        res.json({
            success: true,
            message: `T√¨m ki·∫øm s·∫£n ph·∫©m v·ªõi t·ª´ kh√≥a "${keyword}" th√†nh c√¥ng`,
            data
        });
    } catch (error) {
        console.error('‚ùå L·ªói khi t√¨m ki·∫øm s·∫£n ph·∫©m:', error);
        res.status(500).json({ success: false, message: 'Internal server error' });
    }
};

module.exports = {
    getAllProducts,
    getHotProducts,
    getProductById,
    getProductsByCategory,
    getRelatedProducts,
    searchProducts,
};
